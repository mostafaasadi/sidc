#!/bin/bash
# SIDC
# author : Mostafa Asadi
# url    : http://ma73.ir
# github : https://github.com/mostafaasadi/sidc/
# Email  : mostafaasadi73@gmail.com
#
# requirement : libfribidi-bin,zenity
# chmod +x sidc
# ./sidc
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

clear
# searching in directory content
searching_function (){
	echo -e "\n\t\t searching $key in $dir ... \n"
	sleep 1
	find "$dir" -type f -print | xargs grep -I "$key" 2>/dev/null | fribidi && echo -e "\n\n\t\t\t All Done !" && exit
}
# codes for Cli
text_function (){
	echo -e "\n\n\t\t\t Search in directory content \n\n\n"
	if [ -z $1 ];then
		read -p "                       Keyword : " key
	else
	key=$1
	fi

	while getopts "d:h" options;do
   	case "$options" in
  	 	d)
		 	dir="$OPTARG" ;;
	 		h)
	 		echo -e "\n\t\t\t SIDC
		  A script to search in directory content + GUI
		\n
		requirement : libfribidi-bin ( for rtl file name) , zenity (for GUI)
		\n
		sidc -t [keyword] -d [directory to search]
		* sidc will run GUI , you can use -t for Cli
		* if your keyword contain a space , you should put it in double quotations .
		* if you don't enter a directory , sidc searches in current directory .\n\n"
	exit	;;
	esac
 done

	if [ -z $dir ];then
		dir=$PWD
	fi
	searching_function
}
# this check user order for Gui or Cli
while getopts "t" options;do
	case "$options" in
		t)
		text_function;;
	esac
done

# codes for Gui
# keyword input
if key=`zenity --entry \
--window-icon="$HOME/.icons/sidc.png" \
--ok-label="Search" \
--title="SIDC - search in directory content" \
--text="Enter your keyword " --width 350 `
  then echo $?
else echo "No keyword entered !"
fi
#directory Select
dir=`zenity --file-selection --directory --window-icon="$HOME/.icons/sidc.png" \
 --title="SIDC - Select a Directory" `
case $? in
         0)
                echo "\"$dir\" selected.";;
         1)
                echo "No Directory selected.";;
        -1)
                echo "An unexpected error has occurred.";;
esac
# show result
echo -e "\n\n\n"
searching_function |  zenity --text-info --window-icon="$HOME/.icons/sidc.png" \
--width 800 --height 900
